#!/bin/sh

# Directories
GIT_ROOT=$(git rev-parse --show-toplevel)
SCRIPTS_DIRECTORY=$GIT_ROOT/scripts
GIT_HOOKS_DIRECTORY=$SCRIPTS_DIRECTORY/git-hooks

# check for commits to protected branches
branch="$(git rev-parse --abbrev-ref HEAD)"

if [ "$branch" = "main" ] || [ "$branch" = "candidate" ]; then
  echo "You can't commit directly to a protected branch"
  exit 1
fi

# Redirect output to stderr.
exec 1>&2

# Swiftlint https://github.com/aitemr/awesome-git-hooks/blob/master/pre-commit/pre-commit-swiftlint
# LINT=$(which swiftlint)

# if [[ -e "${LINT}" ]]; then
# 	echo "SwiftLint Start..."
# 	echo $(pwd)
# else
# 	echo "SwiftLint does not exist, download from https://github.com/realm/SwiftLint"
# 	exit 1
# fi

# RESULT=$($LINT lint --quiet --config .swiftlint.yml)

# if [ "$RESULT" == '' ]; then
# 	printf "SwiftLint Finished.\n"
# else
# 	echo ""
# 	printf "SwiftLint Failed. Please check below:\n"

# 	while read -r line; do
# 		FILEPATH=$(echo $line | cut -d : -f 1)
# 		L=$(echo $line | cut -d : -f 2)
# 		C=$(echo $line | cut -d : -f 3)
# 		TYPE=$(echo $line | cut -d : -f 4 | cut -c 2-)
# 		MESSAGE=$(echo $line | cut -d : -f 5 | cut -c 2-)
# 		DESCRIPTION=$(echo $line | cut -d : -f 6 | cut -c 2-)
# 		printf "\n $TYPE\n"
# 		printf "    $FILEPATH:$L:$C\n"
# 		printf "    $MESSAGE - $DESCRIPTION\n"
# 	done <<< "$RESULT"

# 	printf "\nCOMMIT ABORTED. Please fix them before commiting.\n"

# 	exit 1
# fi