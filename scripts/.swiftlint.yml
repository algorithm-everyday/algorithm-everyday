# By default, SwiftLint uses a set of sensible default rules you can adjust:
disabled_rules: # rule identifiers turned on by default to exclude from running
#  - colon
#  - comma
#  - control_statement
#  - file_length
#  - force_cast
#  - force_try
#  - function_body_length
#  - leading_whitespace
  - line_length
#  - nesting
#  - large_tuple
#  - unused_closure_parameter
#  - opening_brace
#  - operator_whitespace
#  - return_arrow_whitespace
#  - statement_position
#  - todo
#  - trailing_newline
#  - trailing_semicolon
#  - trailing_whitespace
#  - type_body_length
#  - type_name
#  - xctfail_message
#  - variable_name_max_length
#  - identifier_name_min_length
  - identifier_name

opt_in_rules: # some rules are turned off by default, so you need to opt-in
# - empty_count # Find all the available rules by running: `swiftlint rules`

# Alternatively, specify all rules explicitly by uncommenting this option:
# only_rules: # delete `disabled_rules` & `opt_in_rules` if using this
#   - empty_parameters
#   - vertical_whitespace

included: # paths to include during linting. `--path` is ignored if present.
 # - Source

excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Modules
  - fastlane
  # - Carthage
  # - Pods
  # - Source/ExcludedFolder
  # - Source/ExcludedFile.swift
  # - Source/*/ExcludedFile.swift # Exclude files with a wildcard

# analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
#  - explicit_self

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
# force_cast: warning # implicitly
# force_try:
#   severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
# line_length: 110
# they can set both implicitly with an array
# type_body_length:
#   - 300 # warning
#   - 400 # error
# or they can set both explicitly
# file_length:
#  warning: 500
#  error: 1200

# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
#type_name:
#  min_length: 4 # only warning
#  max_length: # warning and error
#    warning: 40
#    error: 50
#  excluded: iPhone # excluded via string
#  allowed_symbols: ["_"] # these are allowed in type names
# identifier_name:
#  min_length: # only min_length
#     error: 4 # only error
#   excluded: # excluded via string array
#     - id
#     - URL
#     - GlobalAPIKey
# reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, codeclimate, junit, html, emoji, sonarqube, markdown, github-actions-logging)


whitelist_rules:
- custom_rules

custom_rules:
    only_one_line_allowed_after_optional:
        name: 'Only One Line Allowed After Optional'
        regex: '(?:\!|\?)+$\n{3,}'
        message: '줄 바꿈은 옵셔널로 선언 이후 한 줄까지만 해주세요.'
        severity: warning